// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Summary render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Summary
    data={
      Object {
        "getLatestPosts": Array [
          Object {
            "author": Object {
              "username": "Foo",
            },
            "content": "Content",
            "id": "000000000000000000000000",
            "title": "Title",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "000000000000000000000000",
    "nodeType": "function",
    "props": Object {
      "centered": true,
      "children": Array [
        undefined,
        <GridRow>
          <GridColumn
            width={12}
          >
            <Card
              fluid={true}
            >
              <CardContent>
                <CardHeader>
                  <Link
                    replace={false}
                    style={
                      Object {
                        "color": "rgba(0,0,0,.85)",
                      }
                    }
                    to={
                      Object {
                        "pathname": "/title-000000000000000000000000",
                        "state": Object {
                          "id": "000000000000000000000000",
                        },
                      }
                    }
                  >
                    Title
                  </Link>
                </CardHeader>
                <CardMeta>
                  Foo
                   - 
                  birkaç saniye önce
                </CardMeta>
                <CardDescription
                  className="display-linebreak"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>Content",
                    }
                  }
                />
              </CardContent>
              <CardContent
                extra={true}
              >
                <Link
                  replace={false}
                  to="/"
                >
                  <Icon
                    as="i"
                    name="idea"
                  />
                  Katılıyorum
                </Link>
                   
                <Link
                  replace={false}
                  to="/"
                >
                  <Icon
                    as="i"
                    name="comment"
                  />
                  Yorum Yaz
                </Link>
                <Link
                  className="summary-context-right"
                  replace={false}
                  to="/"
                >
                  bildir
                </Link>
              </CardContent>
            </Card>
          </GridColumn>
        </GridRow>,
      ],
      "columns": 1,
      "id": "000000000000000000000000",
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridColumn
            width={12}
          >
            <Card
              fluid={true}
            >
              <CardContent>
                <CardHeader>
                  <Link
                    replace={false}
                    style={
                      Object {
                        "color": "rgba(0,0,0,.85)",
                      }
                    }
                    to={
                      Object {
                        "pathname": "/title-000000000000000000000000",
                        "state": Object {
                          "id": "000000000000000000000000",
                        },
                      }
                    }
                  >
                    Title
                  </Link>
                </CardHeader>
                <CardMeta>
                  Foo
                   - 
                  birkaç saniye önce
                </CardMeta>
                <CardDescription
                  className="display-linebreak"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>Content",
                    }
                  }
                />
              </CardContent>
              <CardContent
                extra={true}
              >
                <Link
                  replace={false}
                  to="/"
                >
                  <Icon
                    as="i"
                    name="idea"
                  />
                  Katılıyorum
                </Link>
                   
                <Link
                  replace={false}
                  to="/"
                >
                  <Icon
                    as="i"
                    name="comment"
                  />
                  Yorum Yaz
                </Link>
                <Link
                  className="summary-context-right"
                  replace={false}
                  to="/"
                >
                  bildir
                </Link>
              </CardContent>
            </Card>
          </GridColumn>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Card
              fluid={true}
            >
              <CardContent>
                <CardHeader>
                  <Link
                    replace={false}
                    style={
                      Object {
                        "color": "rgba(0,0,0,.85)",
                      }
                    }
                    to={
                      Object {
                        "pathname": "/title-000000000000000000000000",
                        "state": Object {
                          "id": "000000000000000000000000",
                        },
                      }
                    }
                  >
                    Title
                  </Link>
                </CardHeader>
                <CardMeta>
                  Foo
                   - 
                  birkaç saniye önce
                </CardMeta>
                <CardDescription
                  className="display-linebreak"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>Content",
                    }
                  }
                />
              </CardContent>
              <CardContent
                extra={true}
              >
                <Link
                  replace={false}
                  to="/"
                >
                  <Icon
                    as="i"
                    name="idea"
                  />
                  Katılıyorum
                </Link>
                   
                <Link
                  replace={false}
                  to="/"
                >
                  <Icon
                    as="i"
                    name="comment"
                  />
                  Yorum Yaz
                </Link>
                <Link
                  className="summary-context-right"
                  replace={false}
                  to="/"
                >
                  bildir
                </Link>
              </CardContent>
            </Card>,
            "width": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <CardContent>
                  <CardHeader>
                    <Link
                      replace={false}
                      style={
                        Object {
                          "color": "rgba(0,0,0,.85)",
                        }
                      }
                      to={
                        Object {
                          "pathname": "/title-000000000000000000000000",
                          "state": Object {
                            "id": "000000000000000000000000",
                          },
                        }
                      }
                    >
                      Title
                    </Link>
                  </CardHeader>
                  <CardMeta>
                    Foo
                     - 
                    birkaç saniye önce
                  </CardMeta>
                  <CardDescription
                    className="display-linebreak"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "<p>Content",
                      }
                    }
                  />
                </CardContent>,
                <CardContent
                  extra={true}
                >
                  <Link
                    replace={false}
                    to="/"
                  >
                    <Icon
                      as="i"
                      name="idea"
                    />
                    Katılıyorum
                  </Link>
                     
                  <Link
                    replace={false}
                    to="/"
                  >
                    <Icon
                      as="i"
                      name="comment"
                    />
                    Yorum Yaz
                  </Link>
                  <Link
                    className="summary-context-right"
                    replace={false}
                    to="/"
                  >
                    bildir
                  </Link>
                </CardContent>,
              ],
              "fluid": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <CardHeader>
                      <Link
                        replace={false}
                        style={
                          Object {
                            "color": "rgba(0,0,0,.85)",
                          }
                        }
                        to={
                          Object {
                            "pathname": "/title-000000000000000000000000",
                            "state": Object {
                              "id": "000000000000000000000000",
                            },
                          }
                        }
                      >
                        Title
                      </Link>
                    </CardHeader>,
                    <CardMeta>
                      Foo
                       - 
                      birkaç saniye önce
                    </CardMeta>,
                    <CardDescription
                      className="display-linebreak"
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "<p>Content",
                        }
                      }
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <Link
                        replace={false}
                        style={
                          Object {
                            "color": "rgba(0,0,0,.85)",
                          }
                        }
                        to={
                          Object {
                            "pathname": "/title-000000000000000000000000",
                            "state": Object {
                              "id": "000000000000000000000000",
                            },
                          }
                        }
                      >
                        Title
                      </Link>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Title",
                        "replace": false,
                        "style": Object {
                          "color": "rgba(0,0,0,.85)",
                        },
                        "to": Object {
                          "pathname": "/title-000000000000000000000000",
                          "state": Object {
                            "id": "000000000000000000000000",
                          },
                        },
                      },
                      "ref": null,
                      "rendered": "Title",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        "Foo",
                        " - ",
                        "birkaç saniye önce",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Foo",
                      " - ",
                      "birkaç saniye önce",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "display-linebreak",
                      "dangerouslySetInnerHTML": Object {
                        "__html": "<p>Content",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Link
                      replace={false}
                      to="/"
                    >
                      <Icon
                        as="i"
                        name="idea"
                      />
                      Katılıyorum
                    </Link>,
                    "   ",
                    <Link
                      replace={false}
                      to="/"
                    >
                      <Icon
                        as="i"
                        name="comment"
                      />
                      Yorum Yaz
                    </Link>,
                    <Link
                      className="summary-context-right"
                      replace={false}
                      to="/"
                    >
                      bildir
                    </Link>,
                  ],
                  "extra": true,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Icon
                          as="i"
                          name="idea"
                        />,
                        "Katılıyorum",
                      ],
                      "replace": false,
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "i",
                          "name": "idea",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "Katılıyorum",
                    ],
                    "type": [Function],
                  },
                  "   ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Icon
                          as="i"
                          name="comment"
                        />,
                        "Yorum Yaz",
                      ],
                      "replace": false,
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "i",
                          "name": "comment",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "Yorum Yaz",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "bildir",
                      "className": "summary-context-right",
                      "replace": false,
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "bildir",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "000000000000000000000000",
      "nodeType": "function",
      "props": Object {
        "centered": true,
        "children": Array [
          undefined,
          <GridRow>
            <GridColumn
              width={12}
            >
              <Card
                fluid={true}
              >
                <CardContent>
                  <CardHeader>
                    <Link
                      replace={false}
                      style={
                        Object {
                          "color": "rgba(0,0,0,.85)",
                        }
                      }
                      to={
                        Object {
                          "pathname": "/title-000000000000000000000000",
                          "state": Object {
                            "id": "000000000000000000000000",
                          },
                        }
                      }
                    >
                      Title
                    </Link>
                  </CardHeader>
                  <CardMeta>
                    Foo
                     - 
                    birkaç saniye önce
                  </CardMeta>
                  <CardDescription
                    className="display-linebreak"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "<p>Content",
                      }
                    }
                  />
                </CardContent>
                <CardContent
                  extra={true}
                >
                  <Link
                    replace={false}
                    to="/"
                  >
                    <Icon
                      as="i"
                      name="idea"
                    />
                    Katılıyorum
                  </Link>
                     
                  <Link
                    replace={false}
                    to="/"
                  >
                    <Icon
                      as="i"
                      name="comment"
                    />
                    Yorum Yaz
                  </Link>
                  <Link
                    className="summary-context-right"
                    replace={false}
                    to="/"
                  >
                    bildir
                  </Link>
                </CardContent>
              </Card>
            </GridColumn>
          </GridRow>,
        ],
        "columns": 1,
        "id": "000000000000000000000000",
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <GridColumn
              width={12}
            >
              <Card
                fluid={true}
              >
                <CardContent>
                  <CardHeader>
                    <Link
                      replace={false}
                      style={
                        Object {
                          "color": "rgba(0,0,0,.85)",
                        }
                      }
                      to={
                        Object {
                          "pathname": "/title-000000000000000000000000",
                          "state": Object {
                            "id": "000000000000000000000000",
                          },
                        }
                      }
                    >
                      Title
                    </Link>
                  </CardHeader>
                  <CardMeta>
                    Foo
                     - 
                    birkaç saniye önce
                  </CardMeta>
                  <CardDescription
                    className="display-linebreak"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "<p>Content",
                      }
                    }
                  />
                </CardContent>
                <CardContent
                  extra={true}
                >
                  <Link
                    replace={false}
                    to="/"
                  >
                    <Icon
                      as="i"
                      name="idea"
                    />
                    Katılıyorum
                  </Link>
                     
                  <Link
                    replace={false}
                    to="/"
                  >
                    <Icon
                      as="i"
                      name="comment"
                    />
                    Yorum Yaz
                  </Link>
                  <Link
                    className="summary-context-right"
                    replace={false}
                    to="/"
                  >
                    bildir
                  </Link>
                </CardContent>
              </Card>
            </GridColumn>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Card
                fluid={true}
              >
                <CardContent>
                  <CardHeader>
                    <Link
                      replace={false}
                      style={
                        Object {
                          "color": "rgba(0,0,0,.85)",
                        }
                      }
                      to={
                        Object {
                          "pathname": "/title-000000000000000000000000",
                          "state": Object {
                            "id": "000000000000000000000000",
                          },
                        }
                      }
                    >
                      Title
                    </Link>
                  </CardHeader>
                  <CardMeta>
                    Foo
                     - 
                    birkaç saniye önce
                  </CardMeta>
                  <CardDescription
                    className="display-linebreak"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "<p>Content",
                      }
                    }
                  />
                </CardContent>
                <CardContent
                  extra={true}
                >
                  <Link
                    replace={false}
                    to="/"
                  >
                    <Icon
                      as="i"
                      name="idea"
                    />
                    Katılıyorum
                  </Link>
                     
                  <Link
                    replace={false}
                    to="/"
                  >
                    <Icon
                      as="i"
                      name="comment"
                    />
                    Yorum Yaz
                  </Link>
                  <Link
                    className="summary-context-right"
                    replace={false}
                    to="/"
                  >
                    bildir
                  </Link>
                </CardContent>
              </Card>,
              "width": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <CardContent>
                    <CardHeader>
                      <Link
                        replace={false}
                        style={
                          Object {
                            "color": "rgba(0,0,0,.85)",
                          }
                        }
                        to={
                          Object {
                            "pathname": "/title-000000000000000000000000",
                            "state": Object {
                              "id": "000000000000000000000000",
                            },
                          }
                        }
                      >
                        Title
                      </Link>
                    </CardHeader>
                    <CardMeta>
                      Foo
                       - 
                      birkaç saniye önce
                    </CardMeta>
                    <CardDescription
                      className="display-linebreak"
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "<p>Content",
                        }
                      }
                    />
                  </CardContent>,
                  <CardContent
                    extra={true}
                  >
                    <Link
                      replace={false}
                      to="/"
                    >
                      <Icon
                        as="i"
                        name="idea"
                      />
                      Katılıyorum
                    </Link>
                       
                    <Link
                      replace={false}
                      to="/"
                    >
                      <Icon
                        as="i"
                        name="comment"
                      />
                      Yorum Yaz
                    </Link>
                    <Link
                      className="summary-context-right"
                      replace={false}
                      to="/"
                    >
                      bildir
                    </Link>
                  </CardContent>,
                ],
                "fluid": true,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <CardHeader>
                        <Link
                          replace={false}
                          style={
                            Object {
                              "color": "rgba(0,0,0,.85)",
                            }
                          }
                          to={
                            Object {
                              "pathname": "/title-000000000000000000000000",
                              "state": Object {
                                "id": "000000000000000000000000",
                              },
                            }
                          }
                        >
                          Title
                        </Link>
                      </CardHeader>,
                      <CardMeta>
                        Foo
                         - 
                        birkaç saniye önce
                      </CardMeta>,
                      <CardDescription
                        className="display-linebreak"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<p>Content",
                          }
                        }
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <Link
                          replace={false}
                          style={
                            Object {
                              "color": "rgba(0,0,0,.85)",
                            }
                          }
                          to={
                            Object {
                              "pathname": "/title-000000000000000000000000",
                              "state": Object {
                                "id": "000000000000000000000000",
                              },
                            }
                          }
                        >
                          Title
                        </Link>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Title",
                          "replace": false,
                          "style": Object {
                            "color": "rgba(0,0,0,.85)",
                          },
                          "to": Object {
                            "pathname": "/title-000000000000000000000000",
                            "state": Object {
                              "id": "000000000000000000000000",
                            },
                          },
                        },
                        "ref": null,
                        "rendered": "Title",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          "Foo",
                          " - ",
                          "birkaç saniye önce",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Foo",
                        " - ",
                        "birkaç saniye önce",
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "className": "display-linebreak",
                        "dangerouslySetInnerHTML": Object {
                          "__html": "<p>Content",
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <Link
                        replace={false}
                        to="/"
                      >
                        <Icon
                          as="i"
                          name="idea"
                        />
                        Katılıyorum
                      </Link>,
                      "   ",
                      <Link
                        replace={false}
                        to="/"
                      >
                        <Icon
                          as="i"
                          name="comment"
                        />
                        Yorum Yaz
                      </Link>,
                      <Link
                        className="summary-context-right"
                        replace={false}
                        to="/"
                      >
                        bildir
                      </Link>,
                    ],
                    "extra": true,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Icon
                            as="i"
                            name="idea"
                          />,
                          "Katılıyorum",
                        ],
                        "replace": false,
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "as": "i",
                            "name": "idea",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "Katılıyorum",
                      ],
                      "type": [Function],
                    },
                    "   ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Icon
                            as="i"
                            name="comment"
                          />,
                          "Yorum Yaz",
                        ],
                        "replace": false,
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "as": "i",
                            "name": "comment",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "Yorum Yaz",
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "bildir",
                        "className": "summary-context-right",
                        "replace": false,
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "bildir",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
